@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="error-page text-center">
                <i class="fas fa-exclamation-triangle text-danger" style="font-size: 6rem;"></i>
                <h1 class="display-1 text-muted">@(Model.StatusCode ?? 500)</h1>
                <h2 class="mb-4">@Model.GetStatusMessage()</h2>
                
                @if (Model.ShowErrorMessage)
                {
                    <div class="alert alert-danger" role="alert">
                        <i class="fas fa-info-circle"></i>
                        <strong>Error:</strong> @Model.ErrorMessage
                    </div>
                }
                
                <p class="lead text-muted mb-4">
                    An error occurred while processing your request.
                </p>

                @if (Model.ShowRequestId)
                {
                    <div class="alert alert-info" role="alert">
                        <i class="fas fa-bug"></i>
                        <strong>Request ID:</strong> <code>@Model.RequestId</code>
                    </div>
                }

                @if (Model.ShowErrorDetails && User.IsInRole("Administrator"))
                {
                    <div class="alert alert-warning" role="alert">
                        <i class="fas fa-code"></i>
                        <strong>Details:</strong> @Model.ErrorDetails
                    </div>
                }

                <div class="d-flex gap-3 justify-content-center">
                    <a asp-controller="Home" asp-action="Index" class="btn btn-primary">
                        <i class="fas fa-home"></i> Go Home
                    </a>
                    <a href="javascript:history.back()" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Go Back
                    </a>
                </div>

                @if (Context.RequestServices.GetService<IWebHostEnvironment>()?.EnvironmentName == "Development")
                {
                    <div class="mt-4">
                        <h3>Development Mode</h3>
                        <p>
                            Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
                        </p>
                        <p>
                            <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
                            It can result in displaying sensitive information from exceptions to end users.
                            For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
                            and restarting the app.
                        </p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .error-page {
        padding: 2rem 0;
    }
</style>
